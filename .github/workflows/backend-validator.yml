on:
 push:
    branches:
      - main

name: Backend-Validator

jobs:
  build:
    strategy:
      # this will contain a matrix of all of the combinations
      # we wish to test again:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    
    # Defines the platform for each test run
    runs-on: ${{ matrix.platform }}
    
    # the steps that will be run through for each version and platform
    # combination
    steps:
  
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
       registry: ghcr.io
       username: ${{ github.repository_owner }}
       password: ${{ secrets.CR_PAT }}
         
                
    - name: List
      run: ls && pwd  
     
    - name: Images
      run: docker images 
      
    #- name: Tag
     # run:  docker tag felixgi1516/geosoft2_frontend ghcr.io/felixgi1516/geosoft2_frontend
      
    #- name: Docker Pull 
     # uses: docker://felixgi1516/geosoft2_frontend:latest
        
    #- name: Push 
     # run: docker push ghcr.io/felixgi1516/geosoft2_frontend:latest
             
    #- name: Show running containers  
     # run:  docker ps -a  
    
     
    # https://docs.github.com/en/free-pro-team@latest/packages/guides/pushing-and-pulling-docker-images
    # https://github.com/marketplace/actions/docker-run-action
    
    
    
    - name: Docker Run
      run: |
       docker run -d -p 127.0.0.1:80:8080/tcp felixgi1516/geosoft2_frontend
       docker ps 
       
       
    #- name: Docker Stop   
     # run: |
      # docker stop $(docker ps -q --filter ancestor="felixgi1516/geosoft2_frontend")
       #docker ps
       
    #- name: Show running containers  
     # run:  docker ps -a  
    # sets up go based on the version
     
        
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    # checks out our code locally so we can work with the files
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Clone repository
      run: | 
       git clone https://github.com/Open-EO/openeo-backend-validator.git
    - name: List Files
      run:  ls && pwd
     
    - name: Docker Stop   
      run: |
       curl --fail http://127.0.0.1:8080
       docker stop $(docker ps -q --filter ancestor="felixgi1516/geosoft2_frontend")
       docker ps 
       
    - name: Change direcotory 
      run: |
       cd /home/runner/work/e2e_TestRepo/e2e_TestRepo/openeo-backend-validator/openeoct 
       ls && pwd
       go get github.com/Open-EO/openeo-backend-validator/openeoct/kin-openapi/openapi3
       go get github.com/Open-EO/openeo-backend-validator/openeoct/kin-openapi/openapi3filter
       go get github.com/urfave/cli
       go get github.com/BurntSushi/toml
       go get github.com/mcuadros/go-version
       go build openeoct.go
       ./openeoct config /home/runner/work/e2e_TestRepo/e2e_TestRepo/config.json
        
       
    #- name: Install dependencies 
     # run: |
      #  go get github.com/Open-EO/openeo-backend-validator/openeoct/kin-openapi/openapi3
       # go get github.com/Open-EO/openeo-backend-validator/openeoct/kin-openapi/openapi3filter
        #go get github.com/urfave/cli
        #go get github.com/BurntSushi/toml
        #go get github.com/mcuadros/go-version
    
    #- name: Build exe
     # run: go build openeoct.exe
    
    #- name: List Files
     # run: ls && pwd

    
