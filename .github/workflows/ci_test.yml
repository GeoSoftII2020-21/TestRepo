name: Pytest Workflow_test

on: 
   push:
     branches: 
       - main
   pull_request:
     branches: 
      - main
   schedule: 
      - cron: '0 18 * * *' 
      - cron: '0 6 * * *'
      - cron: '0 12 * * *' 
            
         
jobs:
  job1:
     name: Update Submodule NDVI
     runs-on: ubuntu-latest
     steps:
         - name: Checkout reposistory
           uses: actions/checkout@master
         - name: Checkout submodules
           uses: srt32/git-actions@v0.0.3 # erlaubt Nutzung von git commands 
         - run: |
             git config --global user.email "raabejonas@yahoo.de"
             git config --global user.name "jona159"
             git submodule init  
             git submodule update
             cd GeoSoftII_NDVI_Process
             git checkout master
             git config pull.rebase true
             git pull
             cd ..
             git add GeoSoftII_NDVI_Process
         - name: Check for changes
           run: |
             echo "changes_exist" >> $GITHUB_ENV
             if git diff --cached --exit-code; then
             echo "changes_exist=false" >> $GITHUB_ENV
             else
             echo "changes_exist=true" >> $GITHUB_ENV
             fi
         - name: Commit and Push Only if file updated
           if: $changes_exist == 'true' 
           run: |
              git commit -m "Update NDVI_Process"
              git push -u origin 
                                  
              
  #build:
    #needs: [job1]
    #runs-on: ubuntu-latest
    #strategy:
     # matrix:
       # python-version: [3.7, 3.8]

    #steps:
    #- uses: actions/checkout@v2
    #  with:
        # submodules: true  
    #- name: Set up Python ${{ matrix.python-version }}
     # uses: actions/setup-python@v2
     # with:
      #  python-version: ${{ matrix.python-version }}
        
    #- name: Checkout submodules
    # run: git submodule update --init --recursive  
   # - name: Install dependencies
     # run: |
      #  python -m pip install --upgrade pip
     #   pip install flake8 pytest pytest-cov
      #  pip install -r req.txt
   # - name: Install plugin
    #  run: pip install pytest-github-actions-annotate-failures    
   # - name: Lint with flake8
    #  run: |
        # stop the build if there are Python syntax errors or undefined names
      #  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
     #   flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
     # run: |
       # pytest --cov
